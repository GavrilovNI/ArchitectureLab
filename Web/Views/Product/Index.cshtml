@using Web.Data.Models
@model IEnumerable<ProductInfo>

<link href="css/ProductStyle.css" rel="stylesheet" type="text/css" />
<script src="./js/CartFunctions.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
	
<script>
	function updateValue()
	{
		const search = document.getElementsByClassName('search')[0].value;
		const minPrice = document.getElementsByClassName('filter-price-min')[0].value;
		const maxPrice = document.getElementsByClassName('filter-price-max')[0].value;
		const avaliableCountMin = document.getElementsByClassName('filter-avaliable-count-min')[0].value;

		const urlSearchParams = new URLSearchParams(window.location.search);
		const params = Object.fromEntries(urlSearchParams.entries());

		for ([key, value] of Object.entries(params)) {
			delete params[key];
			params[key.toLowerCase()] = value
		}

		console.log(params);
		console.log(search);

		
		if (search === "")
		{
			delete params["search"];
		}
		else
		{
			params["search"] = search;
		}

		if (avaliableCountMin === "")
		{
			delete params["avaliableamountmin"];
		}
		else if(avaliableCountMin >= 0)
		{
			params["avaliableamountmin"] = avaliableCountMin;
		}

		if (minPrice === "")
		{
			delete params["minprice"];
		}
		else if(minPrice >= 0)
		{
			params["minprice"] = minPrice;
		}

		if (maxPrice === "")
		{
			delete params["maxprice"];
		}
		else if(maxPrice >= 0)
		{
			params["maxprice"] = maxPrice;
		}

		console.log(params);

		let paramsStr = Object.keys(params).map(function (key) { 
		  return "" + key + "=" + params[key];
		}).join("&");
			
		if(paramsStr !== "")
			paramsStr = "?" + paramsStr;
			
		window.location.href=window.location.href.split('?',1)[0] + paramsStr;

	}

	function loadParams() {
		const searchField = document.getElementsByClassName('search')[0];
		const minPriceField = document.getElementsByClassName('filter-price-min')[0];
		const maxPriceField = document.getElementsByClassName('filter-price-max')[0];
		const avaliableCountMinField = document.getElementsByClassName('filter-avaliable-count-min')[0];

		const urlSearchParams = new URLSearchParams(window.location.search);
		const params = Object.fromEntries(urlSearchParams.entries());

		for ([key, value] of Object.entries(params)) {
			delete params[key];
			params[key.toLowerCase()] = value
		}

		let search = params["search"];
		let minPrice = params["minprice"];
		let maxPrice = params["maxprice"];
		let avaliableCountMin = params["avaliableamountmin"];

		console.log(search)
		console.log(searchField)
		if(search && search !== "") {
			searchField.value = search
		}

		if(minPrice !== "" && minPrice >= 0) {
			minPriceField.value = minPrice
		}

		if(maxPrice !== "" && maxPrice >= 0) {
			maxPriceField.value = maxPrice
		}

		if(avaliableCountMin !== "" && avaliableCountMin >= 0) {
			avaliableCountMinField.value = avaliableCountMin
		}
	}
	window.onload = loadParams;

	function sort(sortKey) {
		const urlSearchParams = new URLSearchParams(window.location.search);
		const params = Object.fromEntries(urlSearchParams.entries());
	
			console.log(sortKey);
		params["sortingkey"] = sortKey;

		let paramsStr = Object.keys(params).map(function (key) { 
			  return "" + key + "=" + params[key];
			}).join("&");
			
		if(paramsStr !== "")
			paramsStr = "?" + paramsStr;
			
		window.location.href=window.location.href.split('?',1)[0] + paramsStr;
	}
</script>


<div class="inner-sorter">
	<div class="catalog-sort">
		<span>Sort by: </span>
		<a class="sort-item" href="#" onclick="sort('price')">
			<span>Price</span>	
		</a>
		<span class="for-hide">" | "</span>
		<a class="sort-item" href="#" onclick="sort('name')">
			<span>Name</span>
		</a>
		<span class="for-hide">" | "</span>
		<a class="sort-item" href="#" onclick="sort('count')">
			<span>Count</span>	
		</a>
	</div>
	<div class="filtres">
		<input class="search" type="text" placeholder="Search..."/>
		<input class="filter-avaliable-count-min" type="number" placeholder="Enter min avaliable"/>
		<input class="filter-price-min" type="number" placeholder="Enter min price"/>
		<input class="filter-price-max" type="number" placeholder="Enter max price"/>
		<button class="button-price" onclick="updateValue()">Apply</button>
		
	</div>
</div>

<div class="row mt-5 mb-2">
	@{
		foreach(ProductInfo product in Model) {
			@Html.Partial("_ProductPartial", product)
		}
	}
</div>

