@using Web.Data.Models
@model IEnumerable<ProductInfo>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>

<script>
	function updateValue()
	{
		const min = document.getElementsByClassName('filter-min');
		const max = document.getElementsByClassName('filter-max');
		const av = document.getElementsByClassName('avaliable-min');

		let sRef = window.location.href;
		let sCut = sRef.split("?");
		if (sCut[1] != null)
		{
			if (sCut[1][0] === "M" || sCut[1][0] === "A")
				sRef = sCut[0];
			else
				sRef = sRef.split("&")[0];
		}
		if (av[0].value != "" && av[0].value >= 0)
		{
			if (!sRef.includes("?"))
			{
				sRef += "?AvaliableAmountMin="+av[0].value;
			}
			else
			{
				sRef += "&AvaliableAmountMin="+av[0].value;
			}
		}
		if (min[0].value != "" && min[0].value >= 0)
		{
			if (!sRef.includes("?"))
			{
				sRef += "?MinPrice="+min[0].value;
			}
			else
			{
				sRef += "&MinPrice="+min[0].value;
			}
		}
		if (max[0].value != "" && max[0].value >= 0)
		{
			if (!sRef.includes("?"))
			{
				sRef += "?MaxPrice="+max[0].value;
			}
			else
			{
				sRef += "&MaxPrice="+max[0].value;
			}
		}
			
		window.location.href=sRef;

		console.log(" ");
	}
function AddItem(itemId) {
    $.ajax({
        type: "GET",
        url: "/Cart/AddItem",       
		data: { 'itemId': itemId, 'count': 1 },
        async: true,
        success: function (html) {
            ServiceSucceeded(html);
        },
        error: function (jqXHR, exception) {
			alert('error: ' + jqXHR.status + ' : ' + exception + ' : ' + jqXHR.responseText);
			//https://stackoverflow.com/questions/6792878/jquery-ajax-error-function
		}
    });
}

</script>
<style>
	.col-lg-4 p, h2, img, a, button {text-align: center;}
	.col-lg-4 img { width: 250px; height: 250px; object-fit: cover; margin-top: 5px;  margin-left: auto;
  margin-right: auto; display: block;}
	.col-lg-4 {
		width: 49%;
		margin: 5px auto;
		border-width: 1px;
		border-color: rgb(190,190,190);
		border-style: solid;
		border-radius: 25px;
		}
	.sort-itemol-lg-4 a {
	.button-classborder: 2px;
		border-color: rgb(190,190,190);
		border-style: solid;
		border-radius: 25px;
		margin-top: 3px;
	}
	.button-class {
		text-align:center;
	}


	.inner-sorter {
		padding: 8px 0;
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
		justify-content: space-between;
	}

	.sort-item {
		color: black;
	}
	.for-hide {
		visibility: hidden;
	}
	.button-class {
		text-align:center;
	}

</style>
<div class="inner-sorter">
	<div class="catalog-sort">
		<span>Sort by: </span>
		<a class="sort-item" href="/product?sortingKey=price" onclick="style.color='green'">
			<span>Price</span>	
		</a>
		<span class="for-hide">" | "</span>
		<a class="sort-item" href="/product?sortingKey=name" onclick="style.color='green'">
			<span>Name</span>
		</a>
		<span class="for-hide">" | "</span>
		<a class="sort-item" href="/product?sortingKey=count" onclick="style.color='green'">
			<span>Count</span>	
		</a>
	</div>
	<div class="filtres">
		<input class="avaliable-min" type="number" placeholder="Enter min avaliable"/>
		<input class="filter-min" type="number" placeholder="Enter min price"/>
		<input class="filter-max" type="number" placeholder="Enter max price"/>
		<button class="button-price" onclick="updateValue()">Apply</button>
		
	</div>
</div>

<div class="row mt-5 mb-2">
	@{
		foreach(ProductInfo product in Model) {
			@Html.Partial("_ProductPartial", product)
		}
	}
</div>

